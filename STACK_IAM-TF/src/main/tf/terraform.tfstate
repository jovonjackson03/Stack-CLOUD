{
  "version": 4,
  "terraform_version": "0.14.7",
  "serial": 104,
  "lineage": "522718c0-e257-c553-5830-732d13d18ed7",
  "outputs": {
    "password": {
      "value": "wcFMA7UgUFRrykrNARAAYDhaZK7O06u2xJh6xOYrobfYg4UfkzvG0AQitb6WpuF3N/n0GE7KYbLAmXV0cMBAsESwTqCnFMk6/SOqPoZ6r9kCy8rskW/l4rbZPbnE/JFQXxBjISHAEaKZ020UqLD7aQNkbxeSRMykD46SJ5SzTJQaAsoqXQXE0mRPf/1/UYBjfn/yUjJZg4RqROfuCFgiSLuQZQI82bVyha/zzvlx8qOg314xRgZReYfeX1NzUwKPeutlHvgGy61H78QdzAIIVIi1L7QODaIErgqnQsZuJthTfgkAxtQZUt+Mjr03UgikHKjvKuznFKzofJnfi+D5dKczo5JEfg7RZEQ/Xr+UjsCH/PEHVO3ZeCUDFc9jH/qDZUkDzKWgF8jbtbg7cVa27iTdxd3dQI+lGK3gxkGWnFnspqMPNbP3UEnKTKybAXfDd7A4cXIBiP51h4Mh0v5LOkFODDUoBEPyvgOKt0s3v4LA7u6Kd4IuDKGkuia93NpqKv8nSXhC1bdykcUQHMc8A3JVStV0P/x6oeh4unHZldP22SvsSO0QRnFyRx5ayIO5OFzE5O2j7ay0wmBz/ZhDZNJKtDNgfCaaZmDMc00odBNLAVUEMVSawqkdlh0LI7z1wCD1F7oSLHrNvgGU5wvHAcvztCpBV4dLq6EDyp4ZLdk0cRmXJGopaj1Bm6Lvo8nS4AHkYRPb8dh2fpunY8hekuD0VuGae+Dg4Ajh4wvgj+Ji3tov4DPkTEIQqVI25myyEutnul7FLuCK4jJ4v/HgRuRC0faxq/1ndJCIORuB+fWc4gCm/LXhQWEA",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "aws_iam_group",
      "name": "group",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::804494885500:group/stack-group",
            "id": "stack-group",
            "name": "stack-group",
            "path": "/",
            "unique_id": "AGPA3WT5BYJ6LZWQS3ECQ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_group_membership",
      "name": "team",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "group": "stack-group",
            "id": "stack-group-membership",
            "name": "stack-group-membership",
            "users": [
              "stackuser1"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_group.group",
            "aws_iam_user.user"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::804494885500:policy/stack-iam_ec2_s3",
            "description": "A policy that gives iam, ec2, and s3 access",
            "id": "arn:aws:iam::804494885500:policy/stack-iam_ec2_s3",
            "name": "stack-iam_ec2_s3",
            "name_prefix": null,
            "path": "/",
            "policy": "{\r\n  \"Version\": \"2012-10-17\",\r\n  \"Statement\": [\r\n    { \r\n      \"Effect\": \"Allow\",\r\n      \"Action\": \"ec2:*\",\r\n      \"Resource\": \"*\"\r\n    },\r\n    {\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": \"s3:*\",\r\n      \"Resource\": \"*\"\r\n    },\r\n    {\r\n      \"Effect\": \"Allow\",\r\n      \"Action\": \"iam:*\",\r\n      \"Resource\": \"*\"\r\n    }\r\n  ]\r\n}\r\n"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy_attachment",
      "name": "stack-attach",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "groups": [
              "stack-group"
            ],
            "id": "stack-attachment",
            "name": "stack-attachment",
            "policy_arn": "arn:aws:iam::804494885500:policy/stack-iam_ec2_s3",
            "roles": null,
            "users": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_group.group",
            "aws_iam_policy.policy"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_user",
      "name": "user",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::804494885500:user/stackuser1",
            "force_destroy": true,
            "id": "stackuser1",
            "name": "stackuser1",
            "path": "/",
            "permissions_boundary": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
            "tags": null,
            "unique_id": "AIDA3WT5BYJ6G3NIFX2O2"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_user_login_profile",
      "name": "log-prof",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "encrypted_password": "wcFMA7UgUFRrykrNARAAYDhaZK7O06u2xJh6xOYrobfYg4UfkzvG0AQitb6WpuF3N/n0GE7KYbLAmXV0cMBAsESwTqCnFMk6/SOqPoZ6r9kCy8rskW/l4rbZPbnE/JFQXxBjISHAEaKZ020UqLD7aQNkbxeSRMykD46SJ5SzTJQaAsoqXQXE0mRPf/1/UYBjfn/yUjJZg4RqROfuCFgiSLuQZQI82bVyha/zzvlx8qOg314xRgZReYfeX1NzUwKPeutlHvgGy61H78QdzAIIVIi1L7QODaIErgqnQsZuJthTfgkAxtQZUt+Mjr03UgikHKjvKuznFKzofJnfi+D5dKczo5JEfg7RZEQ/Xr+UjsCH/PEHVO3ZeCUDFc9jH/qDZUkDzKWgF8jbtbg7cVa27iTdxd3dQI+lGK3gxkGWnFnspqMPNbP3UEnKTKybAXfDd7A4cXIBiP51h4Mh0v5LOkFODDUoBEPyvgOKt0s3v4LA7u6Kd4IuDKGkuia93NpqKv8nSXhC1bdykcUQHMc8A3JVStV0P/x6oeh4unHZldP22SvsSO0QRnFyRx5ayIO5OFzE5O2j7ay0wmBz/ZhDZNJKtDNgfCaaZmDMc00odBNLAVUEMVSawqkdlh0LI7z1wCD1F7oSLHrNvgGU5wvHAcvztCpBV4dLq6EDyp4ZLdk0cRmXJGopaj1Bm6Lvo8nS4AHkYRPb8dh2fpunY8hekuD0VuGae+Dg4Ajh4wvgj+Ji3tov4DPkTEIQqVI25myyEutnul7FLuCK4jJ4v/HgRuRC0faxq/1ndJCIORuB+fWc4gCm/LXhQWEA",
            "id": "stackuser1",
            "key_fingerprint": "1d1de9a55530cb5f62ad1f2adf797d3946f4608e",
            "password_length": 20,
            "password_reset_required": true,
            "pgp_key": "keybase:jovonjackson",
            "user": "stackuser1"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_user.user"
          ]
        }
      ]
    },
    {
      "module": "module.aws_mfa",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "526611730",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowAllUsersToListAccounts\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:ListVirtualMFADevices\",\n        \"iam:ListUsers\",\n        \"iam:ListAccountAliases\",\n        \"iam:GetAccountSummary\",\n        \"iam:GetAccountPasswordPolicy\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"AllowIndividualUserToSeeAndManageOnlyTheirOwnAccountInformation\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:UploadSigningCertificate\",\n        \"iam:UpdateSigningCertificate\",\n        \"iam:UpdateAccessKey\",\n        \"iam:ListSigningCertificates\",\n        \"iam:ListAccessKeys\",\n        \"iam:GetLoginProfile\",\n        \"iam:DeleteSigningCertificate\",\n        \"iam:DeleteLoginProfile\",\n        \"iam:DeleteAccessKey\",\n        \"iam:CreateAccessKey\"\n      ],\n      \"Resource\": \"arn:aws:iam::*:user/${aws:username}\"\n    },\n    {\n      \"Sid\": \"AllowIndividualUserToListOnlyTheirOwnMFA\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:ListMFADevices\",\n      \"Resource\": [\n        \"arn:aws:iam::*:user/${aws:username}\",\n        \"arn:aws:iam::*:mfa/*\"\n      ]\n    },\n    {\n      \"Sid\": \"AllowIndividualUserToManageTheirOwnMFA\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:ResyncMFADevice\",\n        \"iam:EnableMFADevice\",\n        \"iam:DeleteVirtualMFADevice\",\n        \"iam:CreateVirtualMFADevice\"\n      ],\n      \"Resource\": [\n        \"arn:aws:iam::*:user/${aws:username}\",\n        \"arn:aws:iam::*:mfa/${aws:username}\"\n      ]\n    },\n    {\n      \"Sid\": \"AllowIndividualUserToDeactivateOnlyTheirOwnMFAOnlyWhenUsingMFA\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:DeactivateMFADevice\",\n      \"Resource\": [\n        \"arn:aws:iam::*:user/${aws:username}\",\n        \"arn:aws:iam::*:mfa/${aws:username}\"\n      ],\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:MultiFactorAuthPresent\": [\n            \"true\"\n          ]\n        }\n      }\n    },\n    {\n      \"Sid\": \"BlockMostAccessUnlessSignedInWithMFA\",\n      \"Effect\": \"Deny\",\n      \"NotAction\": [\n        \"sts:GetSessionToken\",\n        \"iam:ResyncMFADevice\",\n        \"iam:ListVirtualMFADevices\",\n        \"iam:ListUsers\",\n        \"iam:ListServiceSpecificCredentials\",\n        \"iam:ListSSHPublicKeys\",\n        \"iam:ListMFADevices\",\n        \"iam:ListAccountAliases\",\n        \"iam:ListAccessKeys\",\n        \"iam:GetAccountSummary\",\n        \"iam:EnableMFADevice\",\n        \"iam:DeleteVirtualMFADevice\",\n        \"iam:CreateVirtualMFADevice\",\n        \"iam:CreateLoginProfile\",\n        \"iam:ChangePassword\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"BoolIfExists\": {\n          \"aws:MultiFactorAuthPresent\": [\n            \"false\"\n          ]\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "iam:GetAccountPasswordPolicy",
                  "iam:GetAccountSummary",
                  "iam:ListAccountAliases",
                  "iam:ListUsers",
                  "iam:ListVirtualMFADevices"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "AllowAllUsersToListAccounts"
              },
              {
                "actions": [
                  "iam:CreateAccessKey",
                  "iam:DeleteAccessKey",
                  "iam:DeleteLoginProfile",
                  "iam:DeleteSigningCertificate",
                  "iam:GetLoginProfile",
                  "iam:ListAccessKeys",
                  "iam:ListSigningCertificates",
                  "iam:UpdateAccessKey",
                  "iam:UpdateSigningCertificate",
                  "iam:UploadSigningCertificate"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:iam::*:user/\u0026{aws:username}"
                ],
                "sid": "AllowIndividualUserToSeeAndManageOnlyTheirOwnAccountInformation"
              },
              {
                "actions": [
                  "iam:ListMFADevices"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:iam::*:mfa/*",
                  "arn:aws:iam::*:user/\u0026{aws:username}"
                ],
                "sid": "AllowIndividualUserToListOnlyTheirOwnMFA"
              },
              {
                "actions": [
                  "iam:CreateVirtualMFADevice",
                  "iam:DeleteVirtualMFADevice",
                  "iam:EnableMFADevice",
                  "iam:ResyncMFADevice"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:iam::*:mfa/\u0026{aws:username}",
                  "arn:aws:iam::*:user/\u0026{aws:username}"
                ],
                "sid": "AllowIndividualUserToManageTheirOwnMFA"
              },
              {
                "actions": [
                  "iam:DeactivateMFADevice"
                ],
                "condition": [
                  {
                    "test": "Bool",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:MultiFactorAuthPresent"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:iam::*:mfa/\u0026{aws:username}",
                  "arn:aws:iam::*:user/\u0026{aws:username}"
                ],
                "sid": "AllowIndividualUserToDeactivateOnlyTheirOwnMFAOnlyWhenUsingMFA"
              },
              {
                "actions": [],
                "condition": [
                  {
                    "test": "BoolIfExists",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:MultiFactorAuthPresent"
                  }
                ],
                "effect": "Deny",
                "not_actions": [
                  "iam:ChangePassword",
                  "iam:CreateLoginProfile",
                  "iam:CreateVirtualMFADevice",
                  "iam:DeleteVirtualMFADevice",
                  "iam:EnableMFADevice",
                  "iam:GetAccountSummary",
                  "iam:ListAccessKeys",
                  "iam:ListAccountAliases",
                  "iam:ListMFADevices",
                  "iam:ListSSHPublicKeys",
                  "iam:ListServiceSpecificCredentials",
                  "iam:ListUsers",
                  "iam:ListVirtualMFADevices",
                  "iam:ResyncMFADevice",
                  "sts:GetSessionToken"
                ],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "BlockMostAccessUnlessSignedInWithMFA"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_mfa",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.aws_mfa",
      "mode": "managed",
      "type": "aws_iam_group_policy_attachment",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "group": "stack-group",
            "id": "stack-group-20210402044007378200000001",
            "policy_arn": "arn:aws:iam::804494885500:policy/enforce-mfa"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_group.group",
            "module.aws_mfa.aws_iam_policy.main",
            "module.aws_mfa.data.aws_iam_policy_document.main"
          ]
        }
      ]
    },
    {
      "module": "module.aws_mfa",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::804494885500:policy/enforce-mfa",
            "description": "Requires valid MFA security token for all API calls except those needed for managing a user's own IAM user.",
            "id": "arn:aws:iam::804494885500:policy/enforce-mfa",
            "name": "enforce-mfa",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowAllUsersToListAccounts\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:ListVirtualMFADevices\",\n        \"iam:ListUsers\",\n        \"iam:ListAccountAliases\",\n        \"iam:GetAccountSummary\",\n        \"iam:GetAccountPasswordPolicy\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"AllowIndividualUserToSeeAndManageOnlyTheirOwnAccountInformation\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:UploadSigningCertificate\",\n        \"iam:UpdateSigningCertificate\",\n        \"iam:UpdateAccessKey\",\n        \"iam:ListSigningCertificates\",\n        \"iam:ListAccessKeys\",\n        \"iam:GetLoginProfile\",\n        \"iam:DeleteSigningCertificate\",\n        \"iam:DeleteLoginProfile\",\n        \"iam:DeleteAccessKey\",\n        \"iam:CreateAccessKey\"\n      ],\n      \"Resource\": \"arn:aws:iam::*:user/${aws:username}\"\n    },\n    {\n      \"Sid\": \"AllowIndividualUserToListOnlyTheirOwnMFA\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:ListMFADevices\",\n      \"Resource\": [\n        \"arn:aws:iam::*:user/${aws:username}\",\n        \"arn:aws:iam::*:mfa/*\"\n      ]\n    },\n    {\n      \"Sid\": \"AllowIndividualUserToManageTheirOwnMFA\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"iam:ResyncMFADevice\",\n        \"iam:EnableMFADevice\",\n        \"iam:DeleteVirtualMFADevice\",\n        \"iam:CreateVirtualMFADevice\"\n      ],\n      \"Resource\": [\n        \"arn:aws:iam::*:user/${aws:username}\",\n        \"arn:aws:iam::*:mfa/${aws:username}\"\n      ]\n    },\n    {\n      \"Sid\": \"AllowIndividualUserToDeactivateOnlyTheirOwnMFAOnlyWhenUsingMFA\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:DeactivateMFADevice\",\n      \"Resource\": [\n        \"arn:aws:iam::*:user/${aws:username}\",\n        \"arn:aws:iam::*:mfa/${aws:username}\"\n      ],\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:MultiFactorAuthPresent\": [\n            \"true\"\n          ]\n        }\n      }\n    },\n    {\n      \"Sid\": \"BlockMostAccessUnlessSignedInWithMFA\",\n      \"Effect\": \"Deny\",\n      \"NotAction\": [\n        \"sts:GetSessionToken\",\n        \"iam:ResyncMFADevice\",\n        \"iam:ListVirtualMFADevices\",\n        \"iam:ListUsers\",\n        \"iam:ListServiceSpecificCredentials\",\n        \"iam:ListSSHPublicKeys\",\n        \"iam:ListMFADevices\",\n        \"iam:ListAccountAliases\",\n        \"iam:ListAccessKeys\",\n        \"iam:GetAccountSummary\",\n        \"iam:EnableMFADevice\",\n        \"iam:DeleteVirtualMFADevice\",\n        \"iam:CreateVirtualMFADevice\",\n        \"iam:CreateLoginProfile\",\n        \"iam:ChangePassword\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"BoolIfExists\": {\n          \"aws:MultiFactorAuthPresent\": [\n            \"false\"\n          ]\n        }\n      }\n    }\n  ]\n}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.aws_mfa.data.aws_iam_policy_document.main"
          ]
        }
      ]
    },
    {
      "module": "module.aws_mfa",
      "mode": "managed",
      "type": "aws_iam_user_policy_attachment",
      "name": "main",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "stackuser1-20210402044007404200000002",
            "policy_arn": "arn:aws:iam::804494885500:policy/enforce-mfa",
            "user": "stackuser1"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_user.user",
            "module.aws_mfa.aws_iam_policy.main",
            "module.aws_mfa.data.aws_iam_policy_document.main"
          ]
        }
      ]
    }
  ]
}
